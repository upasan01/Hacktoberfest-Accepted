<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Color Palette Contributor</title>
    <!-- Load Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    fontFamily: {
                        sans: ['Inter', 'sans-serif'],
                    },
                    colors: {
                        'hf-orange': '#FF8C00', /* Hacktoberfest orange */
                        'hf-dark': '#212429', /* Dark background */
                    }
                },
            }
        }
    </script>
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f8fafc; /* light gray background */
        }
        .color-block {
            /* Ensures text is visible on both light and dark backgrounds */
            color: #1f2937;
            text-shadow: 0 0 5px rgba(255, 255, 255, 0.7);
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
            cursor: pointer;
        }
        .color-block:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
        }
        .copied-message {
            position: fixed;
            top: 1rem;
            right: 1rem;
            opacity: 0;
            transition: opacity 0.3s ease-out;
        }
        .copied-message.show {
            opacity: 1;
        }
    </style>
</head>
<body class="min-h-screen p-6 sm:p-10">

    <!-- Header and Call to Action -->
    <header class="max-w-4xl mx-auto text-center mb-12">
        <h1 class="text-4xl sm:text-5xl font-extrabold text-hf-dark mb-3">
            ðŸŽ¨ Community Color Palette
        </h1>
        <p class="text-xl text-gray-600">
            A simple Hacktoberfest project. Add your favorite color to the list below!
        </p>
    </header>

    <!-- Color Grid Container -->
    <main class="max-w-6xl mx-auto">
        <div id="palette-grid" class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-6">
            <!-- Color blocks will be injected here by JavaScript -->
        </div>
    </main>

    <!-- Success Message Snackbar -->
    <div id="copied-toast" class="copied-message p-3 bg-hf-orange text-white font-semibold rounded-lg shadow-xl">
        Copied to clipboard!
    </div>

    <!-- Footer for Contribution Guidance -->
    <footer class="mt-16 text-center text-gray-500 text-sm max-w-4xl mx-auto">
        <p>To contribute, simply find the JavaScript array named `colors` in the source code and add a new color object like `{ name: "My New Color", hex: "#123456" }`.</p>
    </footer>


    <script>
        // --- HACKTOBERFEST CONTRIBUTION POINT: ADD NEW COLORS HERE ---
        const colors = [
            { name: "Sky Blue", hex: "#87CEEB" },
            { name: "Emerald Green", hex: "#50C878" },
            { name: "Sunny Yellow", hex: "#FFD700" },
            { name: "Coral Pink", hex: "#FF7F50" },
            { name: "Deep Navy", hex: "#000080" },
            { name: "Crimson Red", hex: "#DC143C" },
            { name: "Lavender Mist", hex: "#E6E6FA" },
            { name: "Electric Purple", hex: "#BF00FF" },
            { name: "Forest Green", hex: "#228B22" },
            { name: "Rust Orange", hex: "#B7410E" },
            { name: "Teal Water", hex: "#008080" },
            // Add your unique color here for a Hacktoberfest pull request!
        ];
        // -----------------------------------------------------------

        const paletteGrid = document.getElementById('palette-grid');
        const copiedToast = document.getElementById('copied-toast');

        /**
         * Determines if a color is light or dark to ensure text readability.
         * Uses the YIQ formula for perceived luminance.
         * @param {string} hex - The hex color code (e.g., "#FF0000").
         * @returns {boolean} True if the color is light, false if dark.
         */
        function isLightColor(hex) {
            // Convert hex to R, G, B components
            const r = parseInt(hex.substring(1, 3), 16);
            const g = parseInt(hex.substring(3, 5), 16);
            const b = parseInt(hex.substring(5, 7), 16);
            
            // YIQ calculation for perceived brightness
            const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;
            // Threshold for light colors (can be adjusted)
            return yiq >= 180;
        }

        /**
         * Copies text to the clipboard and shows a temporary success message.
         * @param {string} text - The text to copy.
         */
        function copyToClipboard(text) {
            // Use execCommand for broader compatibility in sandboxed environments
            const tempInput = document.createElement('textarea');
            tempInput.value = text;
            document.body.appendChild(tempInput);
            tempInput.select();
            document.execCommand('copy');
            document.body.removeChild(tempInput);

            // Show toast message
            copiedToast.textContent = `Copied ${text}!`;
            copiedToast.classList.add('show');
            
            setTimeout(() => {
                copiedToast.classList.remove('show');
            }, 1500);
        }

        /**
         * Renders all color blocks into the DOM.
         */
        function renderPalette() {
            paletteGrid.innerHTML = colors.map(color => {
                // Determine text color for contrast
                const textColor = isLightColor(color.hex) ? 'text-gray-900' : 'text-white';
                
                return `
                    <div class="color-block p-4 rounded-xl shadow-lg flex flex-col justify-end h-40 sm:h-52"
                         style="background-color: ${color.hex};"
                         data-hex="${color.hex}"
                         title="Click to copy Hex Code">
                        <span class="text-lg font-bold ${textColor}">${color.name}</span>
                        <span class="text-sm font-medium ${textColor} opacity-80">${color.hex}</span>
                    </div>
                `;
            }).join('');

            // Add click event listeners to the new blocks
            document.querySelectorAll('.color-block').forEach(block => {
                block.addEventListener('click', (event) => {
                    const hexCode = event.currentTarget.getAttribute('data-hex');
                    copyToClipboard(hexCode);
                });
            });
        }

        // Initialize the palette on load
        window.onload = renderPalette;
    </script>
</body>
</html>
